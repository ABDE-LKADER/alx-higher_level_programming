============================= test session starts ==============================
100-matrix_mul.py module tests
==============================

============================= function in use ==================================
Using matrix_mul function
=========================

Importing function from the module:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Dividing a matrix of number by a matrix of number:

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

Dividing string by a matrix of number:

    >>> matrix_mul("Holberton", [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list

Dividing a matrix of number by a string:

    >>> matrix_mul([[1, 2], [3, 4]], "Holberton")
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list

Dividing a list of integers by a matrix of number:

    >>> matrix_mul([1, 2], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists

Dividing a matrix of number by a list of integers:

    >>> matrix_mul([[1, 2], [3, 4]], [1, 2])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists

Dividing an empty matrix by a matrix of number:

    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can’t be empty

Dividing a matrix of number by an empty matrix:

    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
        ...
    ValueError: m_b can’t be empty
