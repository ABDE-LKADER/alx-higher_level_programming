============================= test session starts ==============================
2-matrix_divided.py module tests
================================

============================= function in use ==================================
Using matrix_divided function
=============================

Importing function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Dividing a matrix by 3:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing a matrix by "Hello":

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Hello")
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number

Dividing a matrix by 0:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    	      ...
    ZeroDivisionError: division by zero

Passing an empty matrix:

    >>> matrix_divided([], 10)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a matrix with different sizes:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]], 10)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size

Dividing a matrix by a float number:

    >>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
    [[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]

Dividing a matrix which has positive and negative integer/float numbers

    >>> matrix_divided([[-1, 3.1, 0], [78, -103.7, 54]], 9.2)
    [[-0.11, 0.34, 0.0], [8.48, -11.27, 5.87]]

Missing arguments:

    >>> matrix_divided()
    Traceback (most recent call last):
    	      ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Missing 2nd argument:

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]])
    Traceback (most recent call last):
    	      ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'
